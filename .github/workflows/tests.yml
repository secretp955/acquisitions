name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        env:
          NODE_ENV: test
          NODE_OPTIONS: --experimental-vm-modules
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
        run: |
          if ! npm test; then
            echo "::error::Tests failed. Check the test output above for details."
            exit 1
          fi

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results 🧪" >> $GITHUB_STEP_SUMMARY
          
          if [ -f coverage/lcov-report/index.html ]; then
            echo "✅ Tests completed with coverage report generated" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Coverage Summary" >> $GITHUB_STEP_SUMMARY
            
            # Extract coverage percentage if available
            if [ -f coverage/coverage-summary.json ]; then
              echo "Coverage reports available in artifacts" >> $GITHUB_STEP_SUMMARY
            else
              echo "Coverage data generated - check artifacts for detailed reports" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⚠️ Tests completed but coverage report not found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📁 Coverage artifacts uploaded with 30-day retention" >> $GITHUB_STEP_SUMMARY

      - name: Annotate test failures
        if: failure()
        run: |
          echo "::error::Test suite failed. Please check the test output and fix failing tests before merging."